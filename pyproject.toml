[tool.poetry]
name = "omoide"
version = "4.0.0"
description = "Image storing application"
authors = ["IgorZyktin <nicord@yandex.ru>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.100.0"
uvicorn = "^0.23.1"
Jinja2 = "^3.0.3"
python-multipart = "^0.0.6"
databases = "^0.7.0"
asyncpg = "^0.28.0"
bcrypt = "^4.0.1"
SQLAlchemy = "^1.4.42"
click = "^8.1.2"
ujson = "^5.5.0"
loguru = "^0.7.0"
gunicorn = "^21.2.0"
prettytable = "^3.5.0"
psycopg2-binary = "^2.9.6"
pydantic = "^2.0.3"
pydantic-core = "^2.3.0"
starlette = "^0.27.0"

[tool.poetry.dev-dependencies]
pytest = "^7.2.0"
coverage = "^7.2.7"
pytest-asyncio = "^0.21.1"
mypy = "^1.4.1"
sqlalchemy2-stubs = "^0.0.2-alpha.29"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.mypy]
ignore_missing_imports = true
plugins = "pydantic.mypy,sqlalchemy.ext.mypy.plugin,loguru_mypy"

[[tool.mypy.overrides]]
module = "omoide.tests.*"
ignore_errors = true

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    "pragma\\: no cover",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

ignore_errors = true
